name: Create Branch Workflow

#on: workflow_dispatch
on: create

jobs:

  build-and-deploy-on-Azure:
    runs-on: ubuntu-latest
    
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Checkout
      uses: actions/checkout@v1

    - name: Create Postgres Server
      run: |
        bash actions/create_db.sh


  create-namespace:
    runs-on: ubuntu-latest
    
    steps:
    - name: Get Kubectl
      uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}
        
    - name: Create Namespace
      run: |
          NAMESPACE=$(echo ${GITHUB_REF##*/} | sed -e s/[\/_]/-/g | sed -e 's/\(.*\)/\L\1/g')
          if kubectl get namespace $NAMESPACE &> /dev/null; then 
            echo "Namespace already exists" 
          else 
            kubectl create namespace $NAMESPACE
            kubectl label namespaces $NAMESPACE istio-injection=enabled --overwrite=true
            kubectl label namespaces $NAMESPACE field.cattle.io/projectId=p-7m4t9 --overwrite=true
            kubectl annotate namespaces $NAMESPACE field.cattle.io/projectId=c-6pcxg:p-7m4t9
          fi
          
  checkout-update-app:
    runs-on: ubuntu-latest
    needs: [create-namespace]
    steps:
    - name: install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq
        yq --version

    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY_APP }}
        persist-credentials: true
        repository: infologistix/petclinic-app

    - name: Update Helm Repo for App
      run: |
        touch test.txt     # This and the next line is for text to avoid nothing to commit error
        echo "another boring line" >> test.txt
        echo "You are on the Branch ${GITHUB_REF##*/}"
        RandomID=$(cksum <<< ${GITHUB_REF##*/} | cut -f 1 -d ' ')
        export server=pg-server-$RandomID.postgres.database.azure.com
        export NAMESPACE=$(echo ${GITHUB_REF##*/} | sed -e s/[\/_]/-/g | sed -e 's/\(.*\)/\L\1/g')
        export RELEASENAME=petclinic-${GITHUB_REF##*/}
        echo "The host of the DB is pg-server-$RandomID"
        echo "The namespace in fleet.yaml is $NAMESPACE"
        yq -i eval '.deployment.datasource.db_host=env(server)' charts/values.yaml
        yq -i eval '.defaultNamespace=env(NAMESPACE)' charts/fleet.yaml
        yq -i eval '.namespace=env(NAMESPACE)' charts/fleet.yaml
        yq -i eval '.helm.releaseName=env(RELEASENAME)' charts/fleet.yaml
        cat charts/fleet.yaml
        echo ---------------------------------------------------
        cat charts/values.yaml

    - name: Commit files
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add *
        git commit -m "values in chart for ${GITHUB_REF##*/} updated"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.ref }}
        repository: infologistix/petclinic-app


  checkout-update-fleet-repo:
    runs-on: ubuntu-latest
    needs: [checkout-update-app, build-and-deploy-on-Azure]
    env:
      BRANCH: ${GITHUB_REF##*/}
      NAME: fleet-job-${GITHUB_REF##*/}
      RELEASENAME: petclinic-${GITHUB_REF##*/}

    steps:
    - name: Set the environment variable
      run: |
        echo BRANCH=${GITHUB_REF##*/} >> $GITHUB_ENV
        echo NAME=fleet-job-${GITHUB_REF##*/} >> $GITHUB_ENV
        echo RELEASENAME=fleet-${GITHUB_REF##*/}>> $GITHUB_ENV
        
    - name: Checkout
      run: |
        eval `ssh-agent -s`
        ssh-add - <<< '${{ secrets.PRIVATE_SSH_KEY_FLEET }}'
        git clone git@github.com:infologistix/petclinic-fleet.git
        ls

    - name: install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq
        yq --version

    - name: Overwrite values
      run: |
        cd petclinic-fleet
        mkdir $BRANCH
        cp -r main/* $BRANCH
        cd $BRANCH
        yq -i '.name=strenv(NAME)' values.yml
        yq -i '.branch=strenv(BRANCH)' values.yml
        yq -i '.helm.releaseName=strenv(RELEASENAME)' fleet.yaml
        yq -i '.helm.values.name=strenv(NAME)' fleet.yaml
        yq -i '.helm.values.branch=strenv(BRANCH)' fleet.yaml

    - name: Commit Changes for Fleet
      run: |
        cd petclinic-fleet
        touch test.txt     # This and the next line is for text to avoid nothing to commit error
        echo "another boring line" >> test.txt
        eval "$(ssh-agent -s)"
        ssh-add - <<< '${{ secrets.PRIVATE_SSH_KEY_FLEET }}'
        RandomID=$(cksum <<< ${GITHUB_REF##*/} | cut -f 1 -d ' ')
        echo "$RandomID github-actions[bot] pushes to Branch ${BRANCH}" 
        git config --local user.email "$RandomID+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add *
        git commit -m "values for branch ${GITHUB_REF##*/} updated"
        git push
